#!/bin/bash
command -v git-lfs >/dev/null 2>&1 || { echo >&2 "\nThis repository is configured for Git LFS but 'git-lfs' was not found on your path. If you no longer wish to use Git LFS, remove this hook by deleting .git/hooks/post-checkout.\n"; exit 2; }
git lfs post-checkout "$@"

skip=false
checkoutFlags=($@)
if [ ${checkoutFlags[2]:=1} -eq 0 ]; then
  # A file was checked out, rather than a branch
  skip=true
fi

function removePackage() {
  # Remove lingering node_modules
  rm -r "$1node_modules"
  # Remove gitignored files like .DS_store
  local gitignored_files=$(git ls-files $1 --ignored --exclude-standard --others)
  if [ "${gitignored_files}" != "" ]; then
    rm $gitignored_files
  fi
  # Delete any nested empty directories
  find "$1" -type d -empty -delete -mindepth 1
  # Delete the package dir itself
  rmdir "$1"
}

if [ $skip = false ]; then
# Packages that no longer exist but are still around because of a node_modules directory
  removed=$(
    comm -13 \
      <(ls packages/*/*/package.json build/*/package.json build/*/*/package.json services/*/package.json 2>/dev/null | sed 's/package\.json$//' ) \
      <(ls -d packages/*/*/node_modules build/*/node_modules build/*/*/node_modules services/*/node_modules 2>/dev/null | sed 's/node_modules$//' )
  )
  if [ -n "$removed" ]; then
    echo -e "\033[33mRemoving the following deleted packages...\033[0m"
    echo "$removed"
    (
      while IFS= read -r pkg; do
        removePackage $pkg
      done <<< "$removed"
    )
  fi
  # Always exit 0 even if we could not remove some directories
  exit 0
fi
