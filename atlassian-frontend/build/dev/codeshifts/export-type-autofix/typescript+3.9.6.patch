diff --git a/node_modules/typescript/lib/typescript.js b/node_modules/typescript/lib/typescript.js
index 73d31bc..842a08b 100644
--- a/node_modules/typescript/lib/typescript.js
+++ b/node_modules/typescript/lib/typescript.js
@@ -129888,7 +129888,7 @@ var ts;
                 var fixedExportDeclarations = ts.createMap();
                 return codefix.codeFixAll(context, errorCodes, function (changes, diag) {
                     var exportSpecifier = getExportSpecifierForDiagnosticSpan(diag, context.sourceFile);
-                    if (exportSpecifier && !ts.addToSeen(fixedExportDeclarations, ts.getNodeId(exportSpecifier.parent.parent))) {
+                    if (exportSpecifier && ts.addToSeen(fixedExportDeclarations, ts.getNodeId(exportSpecifier.parent.parent))) {
                         fixSingleExportDeclaration(changes, exportSpecifier, context);
                     }
                 });
@@ -129906,7 +129906,10 @@ var ts;
             var typeExportSpecifiers = getTypeExportSpecifiers(exportSpecifier, context);
             if (typeExportSpecifiers.length === exportClause.elements.length) {
                 changes.replaceNode(context.sourceFile, exportDeclaration, ts.updateExportDeclaration(exportDeclaration, exportDeclaration.decorators, exportDeclaration.modifiers, exportClause, exportDeclaration.moduleSpecifier, 
-                /*isTypeOnly*/ true));
+                /*isTypeOnly*/ true), {
+                    leadingTriviaOption: ts.textChanges.LeadingTriviaOption.IncludeAll,
+                    trailingTriviaOption: ts.textChanges.TrailingTriviaOption.Exclude
+                });
             }
             else {
                 var valueExportDeclaration = ts.updateExportDeclaration(exportDeclaration, exportDeclaration.decorators, exportDeclaration.modifiers, ts.updateNamedExports(exportClause, ts.filter(exportClause.elements, function (e) { return !ts.contains(typeExportSpecifiers, e); })), exportDeclaration.moduleSpecifier, 
@@ -129915,7 +129918,10 @@ var ts;
                 /*decorators*/ undefined, 
                 /*modifiers*/ undefined, ts.createNamedExports(typeExportSpecifiers), exportDeclaration.moduleSpecifier, 
                 /*isTypeOnly*/ true);
-                changes.replaceNode(context.sourceFile, exportDeclaration, valueExportDeclaration);
+                changes.replaceNode(context.sourceFile, exportDeclaration, valueExportDeclaration, {
+                  leadingTriviaOption: ts.textChanges.LeadingTriviaOption.IncludeAll,
+                  trailingTriviaOption: ts.textChanges.TrailingTriviaOption.Exclude
+              });
                 changes.insertNodeAfter(context.sourceFile, exportDeclaration, typeExportDeclaration);
             }
         }
