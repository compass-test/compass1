// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<StatusIcon /> should render component 1`] = `
.emotion-0 {
  display: inline-block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  line-height: 1;
}

.emotion-0 > svg {
  overflow: hidden;
  pointer-events: none;
  max-width: 100%;
  max-height: 100%;
  color: var(--icon-primary-color);
  fill: var(--icon-secondary-color);
  vertical-align: bottom;
}

.emotion-0 > svg stop {
  stop-color: currentColor;
}

@media screen and (forced-colors:active) {
  .emotion-0 > svg {
    -webkit-filter: grayscale(1);
    filter: grayscale(1);
    --icon-primary-color: CanvasText;
    --icon-secondary-color: Canvas;
  }
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  line-height: 16px;
  -webkit-transition: opacity 1s ease-in;
  transition: opacity 1s ease-in;
  font-weight: bold;
}

.c0 svg {
  width: 16px;
  height: 16px;
  margin: 0 5px;
  -webkit-transform-origin: 50%;
  -ms-transform-origin: 50%;
  transform-origin: 50%;
}

.c0[data-state='pending'] {
  color: #0065FF;
  -webkit-animation: jZdfHz 0.25s ease-in;
  animation: jZdfHz 0.25s ease-in;
}

.c0[data-state='failed'] {
  color: #DE350B;
  -webkit-animation: jZdfHz 0.25s ease-in;
  animation: jZdfHz 0.25s ease-in;
}

.c0[data-state='success'],
.c0[data-state='rerun'],
.c0[data-state='paused'] {
  color: #00875A;
  -webkit-animation: jZdfHz 0.25s ease-in;
  animation: jZdfHz 0.25s ease-in;
}

.c0[data-state='halted'],
.c0[data-state='stopped'] {
  color: #FF991F;
  -webkit-animation: jZdfHz 0.25s ease-in;
  animation: jZdfHz 0.25s ease-in;
}

.c0[data-state='redeploy'] {
  color: #00875A;
}

.c0[data-state='redeploy'] svg {
  overflow: visible;
}

.c0[data-state='failed_redeploy'] {
  color: #DE350B;
}

.c0[data-state='failed_redeploy'] svg {
  overflow: visible;
}

.c0[data-state='building'] {
  color: #0065FF;
}

.c0[data-state='building'] svg {
  -webkit-animation: fadein 0.25s ease-in,fZIIVa 2.5s infinite ease-in-out;
  animation: fadein 0.25s ease-in,fZIIVa 2.5s infinite ease-in-out;
}

.c0[data-state='complete'] svg {
  width: 16px;
  height: 16px;
  margin: 0 5px;
}

.c0[data-state='default'] svg {
  width: 14px;
  height: 14px;
  padding: 1px;
  margin: 0 5px;
}

<StatusIcon
  status="SUCCESSFUL"
>
  <styled.span
    className=""
    data-state="success"
    data-test="status-success"
  >
    <span
      className="c0"
      data-state="success"
      data-test="status-success"
    >
      <Memo(Icon)
        glyph={[Function]}
        label="Successful"
      >
        <span
          aria-label="Successful"
          className="emotion-0"
          role="img"
          style={
            Object {
              "--icon-primary-color": "currentColor",
              "--icon-secondary-color": "var(--background-default, #FFFFFF)",
            }
          }
        >
          <SuccessStatusIcon
            role="presentation"
          >
            <svg
              height="16"
              role="presentation"
              viewBox="0 0 16 16"
              width="16"
            >
              <path
                d="M11.922 6.375l-4.328 4.36c-.188.145-.37.218-.547.218h-.375a.791.791 0 01-.297-.062.708.708 0 01-.25-.156L4.078 8.672A.342.342 0 014 8.445c0-.088.026-.164.078-.226l.813-.798a.257.257 0 01.22-.11c.093 0 .17.037.234.11L6.64 8.72a.32.32 0 00.227.093.314.314 0 00.227-.094l3.562-3.595a.41.41 0 01.243-.078c.086 0 .157.026.21.078l.812.797a.408.408 0 01.078.242c0 .09-.026.16-.078.21M15.367 4.9a8.039 8.039 0 00-1.703-2.546A8.098 8.098 0 0011.11.644 7.709 7.709 0 008 0C6.916 0 5.883.21 4.9.633a8.025 8.025 0 00-2.548 1.703A8.087 8.087 0 00.642 4.89 7.693 7.693 0 000 8c0 1.083.21 2.117.633 3.102.422.984.99 1.833 1.703 2.546a8.08 8.08 0 002.555 1.71c.99.428 2.026.642 3.11.642 1.083 0 2.117-.21 3.102-.633a8.055 8.055 0 002.547-1.703 8.182 8.182 0 001.71-2.555 7.79 7.79 0 00.64-3.11c0-1.083-.21-2.117-.633-3.102"
                fill="currentColor"
                fillRule="evenodd"
              />
            </svg>
          </SuccessStatusIcon>
        </span>
      </Memo(Icon)>
      Successful
    </span>
  </styled.span>
</StatusIcon>
`;
