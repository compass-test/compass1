// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Item ItemBase should render an InteractionStateManager 1`] = `
<InteractionStateManager>
  <Component />
</InteractionStateManager>
`;

exports[`Item ItemBase should render the Item primitive 1`] = `
<WithTheme(ItemPrimitive)
  isActive={false}
  isFocused={false}
  isHover={false}
  isSelected={false}
  spacing="default"
  styles={[Function]}
  text="My item"
/>
`;

exports[`Item should render correctly 1`] = `
.emotion-4 {
  width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-2.emotion-2 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border: none;
  border-radius: 3px;
  box-sizing: border-box;
  color: inherit;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  font-size: inherit;
  height: 40px;
  outline: none;
  text-align: left;
  -webkit-text-decoration: none;
  text-decoration: none;
  width: 100%;
  padding-left: 12px;
  padding-right: 12px;
  background-color: #F4F5F7;
  fill: #F4F5F7;
}

.emotion-2.emotion-2:focus {
  box-shadow: 0 0 0 2px #4C9AFF inset;
}

.emotion-1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  overflow-x: hidden;
}

@media screen and (-ms-high-contrast:none) {
  .emotion-1 {
    font-family: -apple-system,BlinkMacSystemFont,'Segoe UI','Roboto','Oxygen','Ubuntu','Fira Sans','Droid Sans','Helvetica Neue',sans-serif;
  }
}

@supports (-ms-ime-align:auto) {
  .emotion-1 {
    font-family: -apple-system,BlinkMacSystemFont,'Segoe UI','Roboto','Oxygen','Ubuntu','Fira Sans','Droid Sans','Helvetica Neue',sans-serif;
  }
}

.emotion-0 {
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  line-height: 1.1428571428571428;
  color: #42526E;
}

@media screen and (-ms-high-contrast:none) {
  .emotion-0 {
    line-height: 1.2857142857142858;
  }
}

@supports (-ms-ime-align:auto) {
  .emotion-0 {
    line-height: 1.2857142857142858;
  }
}

@-moz-document url-prefix()  {
  .emotion-0 {
    line-height: 1.2857142857142858;
  }
}

<WithAnalyticsContext(WithAnalyticsEvents(Item))
  text="My item"
>
  <AnalyticsContext
    data={
      Object {
        "componentName": "item",
      }
    }
  >
    <WithAnalyticsEvents(Item)
      text="My item"
    >
      <Item
        createAnalyticsEvent={[Function]}
        isSelected={false}
        onClick={[Function]}
        spacing="default"
        styles={[Function]}
        text="My item"
      >
        <InteractionStateManager>
          <div
            className="emotion-4"
            onBlur={[Function]}
            onFocus={[Function]}
            onMouseDown={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onMouseUp={[Function]}
            role="presentation"
          >
            <WithTheme(ItemPrimitive)
              isActive={false}
              isFocused={false}
              isHover={false}
              isSelected={false}
              onClick={[Function]}
              spacing="default"
              styles={[Function]}
              text="My item"
            >
              <Component
                isActive={false}
                isFocused={false}
                isHover={false}
                isSelected={false}
                onClick={[Function]}
                spacing="default"
                styles={[Function]}
                text="My item"
                theme={Object {}}
              >
                <ItemPrimitive
                  dataset={
                    Object {
                      "data-testid": "NavigationItem",
                    }
                  }
                  isActive={false}
                  isDragging={false}
                  isFocused={false}
                  isHover={false}
                  isSelected={false}
                  onClick={[Function]}
                  spacing="default"
                  styles={[Function]}
                  text="My item"
                  theme={
                    Object {
                      "context": "container",
                      "mode": Object {
                        "contentNav": [Function],
                        "globalItem": [Function],
                        "globalNav": [Function],
                        "heading": [Function],
                        "item": [Function],
                        "section": [Function],
                        "separator": [Function],
                        "skeletonItem": [Function],
                      },
                    }
                  }
                >
                  <ComponentSwitch
                    as="button"
                    className="emotion-2"
                    dataset={
                      Object {
                        "data-testid": "NavigationItem",
                      }
                    }
                    onClick={[Function]}
                  >
                    <button
                      className="emotion-2"
                      data-testid="NavigationItem"
                      onClick={[Function]}
                    >
                      <div
                        className="emotion-1"
                      >
                        <div
                          className="emotion-0"
                        >
                          My item
                        </div>
                      </div>
                    </button>
                  </ComponentSwitch>
                </ItemPrimitive>
              </Component>
            </WithTheme(ItemPrimitive)>
          </div>
        </InteractionStateManager>
      </Item>
    </WithAnalyticsEvents(Item)>
  </AnalyticsContext>
</WithAnalyticsContext(WithAnalyticsEvents(Item))>
`;
