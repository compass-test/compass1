/**
 * This declaration file should be manually updated to keep definitions
 * in sync with original TS sources.
 *
 * Original source: src/index.ts
 *
 * @flow strict
 */

declare type AvailableProduct =
  | {
      productType:
        | typeof SwitcherProductType.JIRA_BUSINESS
        | typeof SwitcherProductType.JIRA_SERVICE_DESK
        | typeof SwitcherProductType.JIRA_SOFTWARE
        | typeof SwitcherProductType.CONFLUENCE
        | typeof SwitcherProductType.COMPASS,
    }
  | AvailableProductWithUrl;

declare type AvailableProductWithUrl = {
  productType:
    | typeof SwitcherProductType.BITBUCKET
    | typeof SwitcherProductType.OPSGENIE
    | typeof SwitcherProductType.STATUSPAGE
    | typeof SwitcherProductType.TRELLO,
  url: string,
};

declare type AvailableSite = {
  adminAccess: boolean,
  availableProducts: AvailableProduct[],
  avatar: string | null,
  cloudId: string,
  displayName: string,
  url: string,
};

declare var SwitcherProductType: {|
  +JIRA_BUSINESS: 'JIRA_BUSINESS',
  +JIRA_SERVICE_DESK: 'JIRA_SERVICE_DESK',
  +JIRA_SOFTWARE: 'JIRA_SOFTWARE',
  +CONFLUENCE: 'CONFLUENCE',
  +OPSGENIE: 'OPSGENIE',
  +BITBUCKET: 'BITBUCKET',
  +STATUSPAGE: 'STATUSPAGE',
  +TRELLO: 'TRELLO',
  +COMPASS: 'COMPASS',
|};

// Exports of index file starts here

declare export var createGetContainersPlugin: (
  fetch: () => Promise<ContainerList>,
) => GetContainersDataPlugin;

declare export var createGetUsersPlugin: (
  fetch: (containerId: string) => Promise<UserData[]>,
) => GetUsersDataPlugin;

declare export var createGetSuggestedSiteNamesPlugin: (
  fetch: () => Promise<string[]>,
) => GetSuggestedSiteNamesPlugin;

declare export var createGetAvailableSitesPlugin: (
  fetch: () => Promise<AvailableSitesResponse>,
) => GetAvailableSitesPlugin;

export type PluginCollection = [string, (...args: any) => Promise<any>][];

export type GetContainersDataPlugin = [
  typeof PluginTypes.GetContainers,
  () => Promise<ContainerList>,
];

export type GetUsersDataPlugin = [
  typeof PluginTypes.GetUsers,
  (containerId: string) => Promise<UserData[]>,
];

export type GetSuggestedSiteNamesPlugin = [
  typeof PluginTypes.GetSuggestedSiteNames,
  () => Promise<SuggestedSiteNamesData>,
];

export type GetAvailableSitesPlugin = [
  typeof PluginTypes.GetAvailableSites,
  () => Promise<AvailableSitesResponse>,
];

declare export var PluginTypes: {|
  +GetContainers: 'GetContainers',
  +GetUsers: 'GetUsers',
  +GetSuggestedSiteNames: 'GetSuggestedSiteNames',
  +GetAvailableSites: 'GetAvailableSites',
|};

export type ContainerData = {
  id: string,
  displayName: string,
  type: $Values<typeof ContainerTypes>,
};

export type ContainerList = {
  type: $Values<typeof ContainerTypes>,
  containers: ContainerData[],
};

declare export var ContainerTypes: {|
  +BITBUCKET_WORKSPACE: 'bitbucket-workspace',
  +ATLASSIAN_CLOUD_ID: 'ATLASSIAN_CLOUD_ID',
  +JIRA_SOFTWARE_PROJECT: 'JIRA_SOFTWARE_PROJECT',
|};

export type UserData = {
  id: string,
  displayName: string,
  idType: $Values<typeof UserIdTypes>,
  avatarUrl?: string,
};

declare export var UserIdTypes: {|
  +ATLASSIAN_ACCOUNT_ID: 'ATLASSIAN_ACCOUNT_ID',
  +TRELLO_ID: 'TRELLO_ID',
|};

export type SuggestedSiteNamesData = string[];
export type AvailableSitesResponse = {
  sites: AvailableSite[],
};
