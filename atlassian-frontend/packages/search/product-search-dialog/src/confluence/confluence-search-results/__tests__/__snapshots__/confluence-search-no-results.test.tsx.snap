// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ConfluenceSearchNoResults /> render should match snapshot 1`] = `
<NoResultsWithHooks
  advancedSearchSelected={[MockFunction]}
  advancedSearchUrl="advanced/search/url"
  filtersCleared={[MockFunction]}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": Object {},
      "now": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  linkComponent={[Function]}
>
  <NoResults
    advancedSearchSelected={[MockFunction]}
    advancedSearchUrl="advanced/search/url"
    clearFilters={[Function]}
    filtersCleared={[MockFunction]}
    hasFilters={false}
    intl={
      Object {
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralFormat": [Function],
          "getRelativeFormat": [Function],
        },
        "locale": "en",
        "messages": Object {},
        "now": [Function],
        "textComponent": "span",
        "timeZone": null,
      }
    }
    isMultiSite={false}
    linkComponent={[Function]}
  >
    <div
      data-test-id="NoResults"
    />
  </NoResults>
</NoResultsWithHooks>
`;

exports[`<ConfluenceSearchNoResults /> with filters render should match snapshot 1`] = `
<NoResultsWithHooks
  advancedSearchSelected={[MockFunction]}
  advancedSearchUrl="advanced/search/url"
  filtersCleared={[MockFunction]}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": Object {},
      "now": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  linkComponent={[Function]}
>
  <NoResults
    advancedSearchSelected={[MockFunction]}
    advancedSearchUrl="advanced/search/url"
    clearFilters={[Function]}
    filtersCleared={[MockFunction]}
    hasFilters={true}
    intl={
      Object {
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralFormat": [Function],
          "getRelativeFormat": [Function],
        },
        "locale": "en",
        "messages": Object {},
        "now": [Function],
        "textComponent": "span",
        "timeZone": null,
      }
    }
    isMultiSite={false}
    linkComponent={[Function]}
  >
    <div
      data-test-id="NoResults"
    />
  </NoResults>
</NoResultsWithHooks>
`;
